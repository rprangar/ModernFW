/*++
  This file contains an 'Intel Peripheral Driver' and is        
  licensed for Intel CPUs and chipsets under the terms of your  
  license agreement with Intel or your vendor.  This file may   
  be modified by the user, subject to additional terms of the   
  license agreement                                             
--*/
/*++

Copyright (c) 2014, Intel Corporation. All rights reserved. <BR> 
This software and associated documentation (if any) is furnished
under a license and may only be used or copied in accordance
with the terms of the license. Except as permitted by such
license, no part of this software or documentation may be
reproduced, stored in a retrieval system, or transmitted in any
form or by any means without the express written consent of
Intel Corporation.


Module Name:
  
  Facp.c


Abstract:
  This file describes the contents of the ACPI Fixed ACPI Description Table
  (FADT).  Some additional ACPI values are defined in Acpi1_0.h and Acpi2_0.h.
  All changes to the FADT contents should be done in this file.

--*/

#include "Facp.h"
#include <PiPei.h>
#include <IndustryStandard/Acpi40.h>
//#include "AcpiTablePlatform.h"

EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE FACP = {
    /* Header */
    {
      EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE,
      sizeof (EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE),
      EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION,
      FILLED_AT_RUN_TIME,           // Checksum
      {EFI_ACPI_OEM_ID},              // OEMID is a 6 bytes long field
      EFI_ACPI_OEM_TABLE_ID,        // OEM table identification(8 bytes long)
      EFI_ACPI_OEM_REVISION,        // OEM revision number
      EFI_ACPI_CREATOR_ID,          // ASL compiler vendor ID
      EFI_ACPI_CREATOR_REVISION     // ASL compiler revision number
    },
    FILLED_AT_RUN_TIME,             // FIRMWARE_CTRL
    FILLED_AT_RUN_TIME,             // DSDT
    RESERVED,
    0,                              // Preferred_PM_Profile
    9,                              // SCI_INT
    0,                              // SCI_CMD
    0x01,                           // ACPI_ENABLE
    0x00,                           // ACPI_DISABLE
    0,                              // S4BIOS_REQ
    0,                              // PSTATE_CNT
    PM1a_EVT_BLK_ADDRESS,           // PM1a_EVT_BLK
    FILLED_AT_RUN_TIME,             // PM1b_EVT_BLK
    PM1a_CNT_BLK_ADDRESS,           // PM1a_CNT_BLK
    FILLED_AT_RUN_TIME,             // PM1b_CNT_BLK
    PM2_CNT_BLK_ADDRESS,            // PM2_CNT_BLK
    PM_TMR_BLK_ADDRESS,             // PM_TMR_BLK
    GPE0_BLK_ADDRESS,               // GPE0_BLK
    FILLED_AT_RUN_TIME,             // GPE1_BLK
    PM1_EVT_LEN,                    // PM1_EVT_LEN
    PM1_CNT_LEN,                    // PM1_CNT_LEN
    PM2_CNT_LEN,                    // PM2_CNT_LEN
    PM_TM_LEN,                      // PM_TMR_LEN
    GPE0_BLK_LEN,                   // GPE0_BLK_LEN
    GPE1_BLK_LEN,                   // GPE1_BLK_LEN
    FILLED_AT_RUN_TIME,             // GPE1_BASE
    0,                              // CST_CNT
    1,                              // P_LVL2_LAT
    87,                             // P_LVL3_LAT
    1024,                           // FLUSH_SIZE
    16,                             // FLUSH_STRIDE
    1,                              // DUTY_OFFSET
    0,                              // DUTY_WIDTH
    0x0D,                           // DAY_ALRM
    0x00,                           // MON_ALRM
    0x0,                            // CENTURY
    0x00,                           // IAPC_BOOT_ARCH
    RESERVED,
    FLAG3,                          // Flags
    
    {
    RESET_REG_ADDRESS_SPACE_ID,     // Address of the reset register
    RESET_REG_BIT_WIDTH,
    RESET_REG_BIT_OFFSET,
    RESERVED,
    RESET_REG_ADDRESS,
    },

    RESET_VALUE,                    // Value to write to the RESET_REG port  

    {
    RESERVED,
    RESERVED,
    RESERVED,
    },
    
    0,                              // 64Bit physical addesss of FACS
    0,                              // 64Bit physical address of DSDT
    
    {
    PM1a_EVT_BLK_ADDRESS_SPACE_ID,  // Extended Port address of Power Mgt 1a Event Reg Blk
    PM1a_EVT_BLK_BIT_WIDTH,
    PM1a_EVT_BLK_BIT_OFFSET,
    RESERVED,
    PM1a_EVT_BLK_ADDRESS,
    },
    
    {
    PM1b_EVT_BLK_ADDRESS_SPACE_ID,  // Extended Port address of Power Mgt 1b Event Reg Blk
    PM1b_EVT_BLK_BIT_WIDTH,
    PM1b_EVT_BLK_BIT_OFFSET,
    RESERVED,
    PM1b_EVT_BLK_ADDRESS,
    },
    
    {
    PM1a_CNT_BLK_ADDRESS_SPACE_ID,  // Extended Port address of Power Mgt 1a Ctrl Reg Blk
    PM1a_CNT_BLK_BIT_WIDTH,
    PM1a_CNT_BLK_BIT_OFFSET,
    RESERVED,
    PM1a_CNT_BLK_ADDRESS,
    },
    
    {
    PM1b_CNT_BLK_ADDRESS_SPACE_ID,  // Extended Port address of Power Mgt 1b Ctrl Reg Blk
    PM1b_CNT_BLK_BIT_WIDTH,
    PM1b_CNT_BLK_BIT_OFFSET,
    RESERVED,
    PM1b_CNT_BLK_ADDRESS,
    },
    
    {
    PM2_CNT_BLK_ADDRESS_SPACE_ID,   // Extended Port address of Power Mgt 2  Ctrl Reg Blk
    PM2_CNT_BLK_BIT_WIDTH,
    PM2_CNT_BLK_BIT_OFFSET,
    RESERVED,
    PM2_CNT_BLK_ADDRESS,
    },
    
    {
    PM_TMR_BLK_ADDRESS_SPACE_ID,    // Extended Port address of Power Mgt Timer Ctrl Reg Blk
    PM_TMR_BLK_BIT_WIDTH,
    PM_TMR_BLK_BIT_OFFSET,
    RESERVED,
    PM_TMR_BLK_ADDRESS,
    },
    
    {
    0,//GPE0_BLK_ADDRESS_SPACE_ID,  // Extended Port address of General Purpose Event 0 Reg Blk
    0,//GPE0_BLK_BIT_WIDTH,        
    0,//GPE0_BLK_BIT_OFFSET,
    RESERVED,
    0,//GPE0_BLK_ADDRESS,
    },
    
    {
    GPE1_BLK_ADDRESS_SPACE_ID,      // Extended Port address of General Purpose Event 1 Reg Blk
    GPE1_BLK_BIT_WIDTH,
    GPE1_BLK_BIT_OFFSET,
    RESERVED,
    GPE1_BLK_ADDRESS
    },
};

VOID*
ReferenceAcpiTable (
  VOID
  )

{
  //
  // Reference the table being generated to prevent the optimizer from removing the 
  // data structure from the exeutable
  //
  return (VOID*)&FACP;
}
